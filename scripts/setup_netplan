#!/bin/bash

# Color definitions
RED='\033[0;31m'
YEL='\033[0;33m'
GRN='\033[0;32m'
BLU='\033[0;34m'
CYA='\033[0;36m'
NC_='\033[0m' # No Color
REDBG='\033[0;41m'

# Prefixes to put before our log messages
INFO="$BLU[INFO]$NC_"
WARN="$YEL[WARN]$NC_"
ERR_="$RED[ERR ]$NC_"
DBUG="$CYA[DBUG]$NC_"
PASS="$GRN[ OK ]$NC_"
NOTE="$REDBG[NOTE]$NC_"


# Helper functions for logging
log_success() {
  echo -e "${PASS} $@"
}
log_important() {
  echo -e "${NOTE} $@"
}
log_error() {
  echo -e "${ERR_} $@"
}
log_warn() {
  echo -e "${WARN} $@"
}
log_info() {
  echo -e "${INFO} $@"
}
log_debug() {
  echo -e "${DBUG} $@"
}

bkup_suffix() {
  echo bkup.$(date +"%Y%m%d%H%M%S")
}


if [ -f /etc/netplan/50-clearpath-bridge.yaml ];
then
  log_warn "This script will overwrite /etc/netplan/50-clearpath-bridge and reconfigure netplan for use with IndoorNav"
  read -p "Are you sure you want to contine? y/N  " yn
  if [ "$yn" != "Y" ] && [ "$yn" != "y" ];
  then
    log_info "Aborting"
    exit 0
  else
    BKUP_PATH="/etc/netplan/50-clearpath-bridge.yaml.$(bkup_suffix)"
    log_info "Saving a backup of the old configuration to $BKUP_PATH"
    sudo mv /etc/netplan/50-clearpath-bridge.yaml $(BKUP_PATH)
  fi
fi

log_info "Creating /etc/netplan/50-clearpath-bridge.yaml..."
cat <<EOF | sudo tee /etc/netplan/50-clearpath-bridge.yaml
# Configure the wired ports to form a single bridge
# We assume wired ports are en* or eth*
network:
  version: 2
  renderer: networkd
  ethernets:
    # dedicated port for communicating with the IndoorNav backpack
    eno1:
      dhcp4: no
      dhcp6: no
      ignore-carrier: true
      addresses:
        - 10.252.252.100/24

    # bridge together all other ports
    bridge_eth:
      dhcp4: no
      dhcp6: no
      match:
        name: eth*
    bridge_enp:
      dhcp4: no
      dhcp6: no
      match:
        name: enp*
    bridge_enx:
      dhcp4: no
      dhcp6: no
      match:
        name: enx*
  bridges:
    br0:
      dhcp4: yes
      dhcp6: no
      interfaces: [bridge_eth, bridge_enp, bridge_enx]
      addresses:
        - 192.168.131.1/24   # standard Clearpath ROS master address
EOF

# We can't reliably update the netplan settings while connected via SSH, as that may disconnect the session
# So if we're logged in over SSH just reboot to apply the changes. Otherwise just apply them in-situ
if [ -z "$SSH_CLIENT" ];
then
  read -p "Would you like to apply the new netplan configuration now? Y/n  " yn
  if [ "$yn" = "N" ] || [ "$yn" = "n" ];
  then
    log_warn "You should run 'sudo netplan apply' or reboot the robot to apply the new network settings"
  else
    log_info "Applying new netplan settings..."
    sudo netplan apply
  fi
else
  log_warn "Detected $(whoami) is logged in over SSH. Rebooting to apply new netplan settings"
  read -p "Would you like reboot the robot now? Y/n  " yn
  if [ "$yn" = "N" ] || [ "$yn" = "n" ];
  then
    log_warn "You should power-cycle the robot to apply the updated netplan configuration"
  else
    log_info "Rebooting now"
    sudo shutdown -r now
  fi
fi

log_info "Done"
exit 0
